@model ASI.Basecode.Services.ServiceModels.RoomPageViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
    <main class="mainBody mainBodyRooms">
        <div class="mainBodyInner2">
            <!-- Rooms Table -->
            <div class="bookingsDashboard userDashboard">
                <div class="bookingsDashboardHeader">
                    <p class="bookingsDashboardTitle">Rooms</p>
                    <div class="users-inputGroup">
                        <button class="btn btn-sm adminAddRoomBtn" type="button" data-bs-toggle="offcanvas"
                            data-bs-target="#addUsers" aria-controls="addUsers">
                            <i class="bi bi-plus-square me-2"></i>
                            <p class="addRoomText">Add Room</p>
                        </button>
                    </div>
                </div>
                <div class="table-wrapper">
                    <table class="table table-striped align-middle" id="adminRoomTable">
                        <thead>
                            <tr>
                                <th scope="col">Room</th>
                                <th scope="col">Style</th>
                                <th scope="col">Capacity</th>
                                <th scope="col">Status</th>
                                <th scope="col">Floor</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Rooms data will be rendered here -->
                            @foreach (var item in Model.RoomList.dataList)
                            {
                                    <tr>
                                        <td>
                                        @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                        <td>
                                        @Html.DisplayFor(modelItem => item.Style)
                                        </td>
                                        <td style="text-align: center;">
                                        @Html.DisplayFor(modelItem => item.Capacity)
                                        </td>
                                        <td>
                                        @Html.DisplayFor(modelItem => item.Status)
                                        </td>
                                         <td style="text-align: center;">
                                        @Html.DisplayFor(modelItem => item.Floor)
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-secondary btn-sm" onclick="editUser(@item.Id)">
                                                Edit
                                            </button>
                                            <button type="button" class="btn btn-danger btn-sm"
                                                onclick="showDeleteModal(@item.Id)">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Booked Rooms Table -->
            <div class="bookingsDashboard userDashboard">
                <div class="bookingsDashboardHeader">
                    <p class="bookingsDashboardTitle">Booked Rooms</p>
                    <div class="users-inputGroup"></div>
                </div>
                <div class="table-wrapper">
                    <table class="table table-striped align-middle" id="adminBookedTable">
                        <thead>
                            <tr>
                                <th scope="col">Room</th>
                                <th scope="col">Style</th>
                                <th scope="col">User</th>
                                <th scope="col">No. of People</th>
                                <th scope="col">Date Booked</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Booked rooms data will be rendered here -->

                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Offcanvas for Adding Rooms -->
        <div class="offcanvas offcanvas-end" data-bs-backdrop="static" tabindex="-1" id="addUsers"
            aria-labelledby="staticBackdropLabel">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="staticBackdropLabel">Add room</h5>
                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
                <form asp-action="PostCreateRoom" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    @* @if (TempData["DuplicateErr"] != null)
                    {
                    <div class="alert alert-danger">@TempData["DuplicateErr"]</div>
                    }

                    @if (TempData["CreateMessage"] != null)
                    {
                    <div class="alert alert-success">@TempData["CreateMessage"]</div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                    } *@

                    <div class="form-group mb-3">
                        <label class="control-label">Name</label>
                        <input name="NewRoom.Name" class="form-control" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label class="control-label">Style</label>
                        <input name="NewRoom.Style" class="form-control" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label class="control-label">Capacity</label>
                        <input name="NewRoom.Capacity" type="number" class="form-control" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label class="control-label">Floor</label>
                        <input name="NewRoom.Floor" class="form-control" type="number" required />
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label class="control-label">Status</label>
                        <select name="NewRoom.Status" class="form-select">
                            <option selected value="Available">Available</option>
                            <option value="Booked">Booked</option>
                            <option value="Occupied">Occupied</option>
                            <option value="Unavailable">Unavailable</option>
                        </select>
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label class="control-label">Style</label>
                        <select name="NewRoom.Style" class="form-select">
                            <option selected value="Classroom">Classroom</option>
                            <option value="Banquet">Banquet</option>
                            <option value="U-Shape">U-Shape</option>
                            <option value="Conference">Conference</option>
                            <option value="Auditorium">Auditorium</option>
                            <option value="Boardroom">Boardroom</option>
                        </select>
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label class="control-label">Details</label>
                        <textarea name="NewRoom.Details" class="form-control" required></textarea>
                        <span class="text-danger"></span>
                    </div>

                    <div class="form-group buttonsOffCanvas">
                        <button type="button" class="btn btn-outline-secondary mt-4" data-bs-dismiss="offcanvas">
                            Cancel
                        </button>
                        <button class="btn btn-primary" type="submit">
                            <i class="bi bi-plus-square me-2"></i>Add
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    @* <script>
    // Dummy Data for Rooms
    const roomsData = [
    { room: 2, style: 'Classroom', capacity: 30, status: 'Available', floor: 2 },
    { room: 4, style: 'Banquet', capacity: 40, status: 'Booked', floor: 4 },
    { room: 6, style: 'Auditorium', capacity: 50, status: 'Available', floor: 8 },
    { room: 11, style: 'Boardroom', capacity: 15, status: 'Available', floor: 1 },
    { room: 1, style: 'Boardroom', capacity: 15, status: 'Booked', floor: 1 },
    { room: 9, style: 'U-Shape', capacity: 18, status: 'Booked', floor: 3 }
    ];

    // Dummy Data for Booked Rooms
    const bookedRoomsData = [
    { room: 2, style: 'Classroom', user: 'Dean Lourence Barquio', no_of_people: 7, date_booked: '01/23/2024' },
    { room: 4, style: 'Banquet', user: 'Dean Lourence Barquio', no_of_people: 25, date_booked: '02/06/2024' },
    { room: 6, style: 'Auditorium', user: 'Dean Lourence Barquio', no_of_people: 12, date_booked: '05/18/2024' },
    { room: 11, style: 'Boardroom', user: 'Dean Lourence Barquio', no_of_people: 10, date_booked: '06/01/2024' },
    { room: 8, style: 'Boardroom', user: 'Dean Lourence Barquio', no_of_people: 15, date_booked: '07/10/2024' },
    { room: 9, style: 'U-Shape', user: 'Dean Lourence Barquio', no_of_people: 20, date_booked: '08/15/2024' }
    ];

    // Function to render Rooms Table
    function renderRooms(rooms) {
    const tbody = document.querySelector('#adminRoomTable tbody');
    tbody.innerHTML = ''; // Clear previous rows

    rooms.forEach((room, index) => {
    const row = document.createElement('tr');
    row.innerHTML = `
    <td>${room.room}</td>
    <td>${room.style}</td>
    <td>${room.capacity}</td>
    <td style="color: ${room.status === 'Available' ? 'green' : 'red'}">${room.status}</td>
    <td>${room.floor}</td>
    <td class="actionBtnUsers">
    <i class="bi bi-pencil-square editIconBtn" onclick="editRoom(${index})"></i>
    <i class="bi bi-trash3 ms-2 deleteIconBtn" onclick="deleteRoom(${index})"></i>
    </td>`;
    tbody.appendChild(row);
    });
    }

    // Function to render Booked Rooms Table
    function renderBookedRooms(bookedRooms) {
    const tbody = document.querySelector('#adminBookedTable tbody');
    tbody.innerHTML = ''; // Clear previous rows

    bookedRooms.forEach((booking, index) => {
    const row = document.createElement('tr');
    row.innerHTML = `
    <td>${booking.room}</td>
    <td>${booking.style}</td>
    <td>${booking.user}</td>
    <td>${booking.no_of_people}</td>
    <td>${booking.date_booked}</td>
    <td class="actionBtnUsers">
    <i class="bi bi-pencil-square editIconBtn" onclick="editBooking(${index})"></i>
    <i class="bi bi-trash3 ms-2 deleteIconBtn" onclick="deleteBooking(${index})"></i>
    </td>`;
    tbody.appendChild(row);
    });
    }

    // Call the functions to render data
    renderRooms(roomsData);
    renderBookedRooms(bookedRoomsData);
    </script> *@
</body>

</html>
